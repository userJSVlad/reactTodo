{"version":3,"sources":["components/Title.js","components/Form/FormInput/FormInput.js","components/Form/FormButton/FormButton.js","components/Form/Form.js","components/ListItem/EmptyStr/EmptyStr.js","components/ListItem/Item/Item.js","components/ListItem/ListItem.js","components/BottomMenu/BottomBtn/BottomBtn.js","components/BottomMenu/ButtomText/ButtomText.js","components/BottomMenu/BottomMenu.js","store/todoSlice.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["Title","className","FormInput","text","getValueText","type","value","onChange","e","target","placeholder","FormButton","addTask","onClick","Form","EmptyStr","Item","task","deleteElement","id","dispatch","useDispatch","icon","faTrashAlt","ListItem","allTasks","useSelector","state","length","map","element","BottomBtn","clearAll","ButtomText","BottomButton","nameBtn","todoSlice","createSlice","name","initialState","reducers","addNewTasks","action","payload","trim","push","nanoid","toLowerCase","clearAllTasks","filter","actions","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6d1679e5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Title() {\r\n   return <h1 className=\"font-serif text-2xl text-start mb-2\">Todo app</h1>\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FormInput({ text, getValueText }) {\r\n   return <input\r\n      type=\"text\"\r\n      value={text}\r\n      onChange={(e) => getValueText(e.target.value)}\r\n      placeholder=\"add your new todo\"\r\n      className=\"p-2 border-gray-400 border-double border-2 rounded-sm\"\r\n   />\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FormButton({ addTask }) {\r\n   return <button type=\"submit\" className=\"p-2 bg-blue-400 border-double border-2 border-blue-400 \r\n   ml-1 rounded text-white hover:bg-purple-700 \r\n   transition-all hover:border-purple-700\" onClick={addTask}>Add task</button>\r\n\r\n}\r\n","import React from 'react'\r\nimport FormInput from './FormInput/FormInput';\r\nimport FormButton from './FormButton/FormButton';\r\n\r\nexport default function Form({text, getValueText, addTask}) {\r\n   return (\r\n      <div className=\"flex justify-cent items-center\">\r\n         <FormInput text={text} getValueText={getValueText}/>\r\n         <FormButton addTask={addTask}/>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nexport default function EmptyStr() {\r\n   return <p className=\"mt-4 text-center text-1xl text-red-500\">You don't have any tasks</p>\r\n}\r\n","import React from 'react'\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nexport default function Item({ task, deleteElement, id }) {\r\n   const dispatch = useDispatch()\r\n   return (\r\n      <li className=\"p-2 mt-2 bg-gray-300 flex space-berween items-start relative\">{task}\r\n         <FontAwesomeIcon className=\"absolute right-3 bottom-2.5 text-lg \r\n         opacity-0 hover:opacity-100 transition-opacity\"\r\n            onClick={() => dispatch(deleteElement(id))}\r\n            icon={faTrashAlt}\r\n         />\r\n      </li>\r\n   )\r\n}","import React from 'react'\r\nimport EmptyStr from './EmptyStr/EmptyStr'\r\nimport Item from './Item/Item'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ListItem({ deleteElement }) {\r\n   let allTasks = useSelector(state => state.allTasks.allTasks);\r\n   return (\r\n      <ul className=\"max-h-72 overflow-y-auto\">\r\n         {allTasks.length === 0 ? <EmptyStr /> :\r\n            allTasks.map((element) => <Item\r\n               key={element.id}\r\n               task={element.text}\r\n               onClick={allTasks}\r\n               deleteElement={deleteElement}\r\n               id={element.id}\r\n            />\r\n            )}\r\n      </ul>\r\n   )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default function BottomBtn({ clearAll }) {\r\n   return <button\r\n      className=\"p-1 bg-blue-400 ml-1 rounded text-white \r\n      hover:bg-purple-700 transition-all\" onClick={clearAll}>\r\n      Clear All</button>\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function ButtomText() {\r\n   let allTasks = useSelector(state => state.allTasks.allTasks);\r\n   return <h2 className=\"flex-auto\">You have<span className=\"text-blue-900\"> {allTasks.length} </span>padding tasks</h2>\r\n}\r\n","import React from 'react'\r\nimport BottomBtn from './BottomBtn/BottomBtn'\r\nimport ButtomText from './ButtomText/ButtomText'\r\n\r\n\r\nexport default function BottomButton({nameBtn, clearAll}) {\r\n   return (\r\n      <div className=\"flex space-berween items-center mt-4\">\r\n         <ButtomText/>\r\n         <BottomBtn clearAll={clearAll}/>\r\n      </div>\r\n   )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from 'nanoid';\r\n\r\n\r\n\r\nconst todoSlice = createSlice({\r\n   name: 'allTasks',\r\n   initialState: {\r\n      allTasks: []\r\n   },\r\n   reducers: {\r\n      addNewTasks(state, action) {\r\n         if (action.payload === '' || !action.payload.trim()) return;\r\n         state.allTasks.push({\r\n            id: nanoid(),\r\n            text: action.payload.trim().toLowerCase(),\r\n         })\r\n      },\r\n      clearAllTasks(state, action) {\r\n         state.allTasks = [];\r\n      },\r\n      deleteElement(state, action) {\r\n         state.allTasks = state.allTasks.filter(element => element.id !== action.payload)\r\n      }\r\n   },\r\n\r\n})\r\n\r\nexport const { addNewTasks, clearAllTasks, deleteElement } = todoSlice.actions;\r\nexport default todoSlice.reducer;","import './App.css';\nimport { useState } from 'react';\nimport Title from './components/Title';\nimport Form from './components/Form/Form';\nimport ListItem from './components/ListItem/ListItem';\nimport ButtonMenu from './components/BottomMenu/BottomMenu.js'\nimport { useDispatch } from 'react-redux'\nimport { addNewTasks, clearAllTasks, deleteElement } from './store/todoSlice'\n\n\n\nfunction App() {\n  const [text, getValueText] = useState('');\n  const dispatch = useDispatch()\n\n  const addTask = () => dispatch(\n    addNewTasks(text),\n    getValueText(''),\n  );\n\n  const clearAll = () => dispatch(clearAllTasks());\n\n  return (\n    <div className=\"min-h-screen flex justify-center items-center flex-col bg-blue-300\">\n      <div className=\" p-6  bg-blue-50\">\n        <Title />\n        <Form text={text} getValueText={getValueText} addTask={addTask} />\n        <ListItem deleteElement={deleteElement} />\n        <ButtonMenu clearAll={clearAll} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport todoSlice from './todoSlice';\r\n\r\n\r\nexport default configureStore({\r\n   reducer:{\r\n      allTasks: todoSlice,\r\n   }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}